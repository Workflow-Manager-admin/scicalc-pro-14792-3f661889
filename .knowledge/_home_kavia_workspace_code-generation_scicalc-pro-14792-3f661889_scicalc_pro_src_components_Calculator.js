{"is_source_file": true, "format": "JavaScript (React JSX)", "description": "React component implementing a scientific calculator UI with state management and calculation logic, including buttons for numbers, operators, scientific functions, memory, and display handling.", "external_files": ["../styles/Calculator.css"], "external_methods": ["useState"], "published": ["Calculator"], "classes": [], "methods": [{"name": "handleNumber", "description": "Handles input of numbers and decimal point, updating display and expression states accordingly."}, {"name": "handleOperator", "description": "Handles operator inputs (+, -, *, /, parentheses), ensuring proper expression formatting."}, {"name": "handleScientific", "description": "Performs scientific calculations like sin, cos, tan, log, ln, sqrt, and square, updating display based on the computed value."}, {"name": "handleMemory", "description": "Manages memory functions (MC, MR, M+, M-), updating memory state and display."}, {"name": "handleClear", "description": "Clears the calculator display and expression."}, {"name": "handleBackspace", "description": "Removes the last character from display and expression, resetting to '0' if needed."}, {"name": "toEvalExpr(expr)", "description": "Converts the stored expression into a JavaScript evaluable string, replacing operators and handling implicit multiplication.", "scope": "", "scopeKind": ""}, {"name": "calculateResult", "description": "Evaluates the current expression and updates display with the result, handling errors gracefully."}], "calls": ["setDisplay", "setExpression", "setMemory", "Function", "Math.sin", "Math.cos", "Math.tan", "Math.log10", "Math.log", "Math.sqrt", "Math.pow", "parseFloat"], "search-terms": ["React calculator component", "scientific calculator UI", "state management", "expression evaluation", "scientific functions", "memory functions", "CSS styling"], "state": 2, "file_id": 18, "knowledge_revision": 50, "git_revision": "ea2f8ec43c1df9ad8e665081f1fe1d380560869f", "revision_history": [{"37": "72c6a63a5313046dc51d3356fab4d0b7daf6e831"}, {"50": "ea2f8ec43c1df9ad8e665081f1fe1d380560869f"}], "ctags": [{"_type": "tag", "name": "Calculator", "path": "/home/kavia/workspace/code-generation/scicalc-pro-14792-3f661889/scicalc_pro/src/components/Calculator.js", "pattern": "/^const Calculator = () => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "calculateResult", "path": "/home/kavia/workspace/code-generation/scicalc-pro-14792-3f661889/scicalc_pro/src/components/Calculator.js", "pattern": "/^  const calculateResult = () => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "handleBackspace", "path": "/home/kavia/workspace/code-generation/scicalc-pro-14792-3f661889/scicalc_pro/src/components/Calculator.js", "pattern": "/^  const handleBackspace = () => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "handleClear", "path": "/home/kavia/workspace/code-generation/scicalc-pro-14792-3f661889/scicalc_pro/src/components/Calculator.js", "pattern": "/^  const handleClear = () => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "handleMemory", "path": "/home/kavia/workspace/code-generation/scicalc-pro-14792-3f661889/scicalc_pro/src/components/Calculator.js", "pattern": "/^  const handleMemory = (fn) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "handleNumber", "path": "/home/kavia/workspace/code-generation/scicalc-pro-14792-3f661889/scicalc_pro/src/components/Calculator.js", "pattern": "/^  const handleNumber = (num) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "handleOperator", "path": "/home/kavia/workspace/code-generation/scicalc-pro-14792-3f661889/scicalc_pro/src/components/Calculator.js", "pattern": "/^  const handleOperator = (op) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "handleScientific", "path": "/home/kavia/workspace/code-generation/scicalc-pro-14792-3f661889/scicalc_pro/src/components/Calculator.js", "pattern": "/^  const handleScientific = (fn) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "mainGrid", "path": "/home/kavia/workspace/code-generation/scicalc-pro-14792-3f661889/scicalc_pro/src/components/Calculator.js", "pattern": "/^  const mainGrid = [$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "memBtns", "path": "/home/kavia/workspace/code-generation/scicalc-pro-14792-3f661889/scicalc_pro/src/components/Calculator.js", "pattern": "/^  const memBtns = [$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "result", "path": "/home/kavia/workspace/code-generation/scicalc-pro-14792-3f661889/scicalc_pro/src/components/Calculator.js", "pattern": "/^    let result = '';$/", "language": "JavaScript", "kind": "variable"}, {"_type": "tag", "name": "sciRow", "path": "/home/kavia/workspace/code-generation/scicalc-pro-14792-3f661889/scicalc_pro/src/components/Calculator.js", "pattern": "/^  const sciRow = [$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "setDisplay", "path": "/home/kavia/workspace/code-generation/scicalc-pro-14792-3f661889/scicalc_pro/src/components/Calculator.js", "pattern": "/^  const [display, setDisplay] = useState('0');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "setExpression", "path": "/home/kavia/workspace/code-generation/scicalc-pro-14792-3f661889/scicalc_pro/src/components/Calculator.js", "pattern": "/^  const [expression, setExpression] = useState('');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "setIsNewNumber", "path": "/home/kavia/workspace/code-generation/scicalc-pro-14792-3f661889/scicalc_pro/src/components/Calculator.js", "pattern": "/^  const [isNewNumber, setIsNewNumber] = useState(true);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "setMemory", "path": "/home/kavia/workspace/code-generation/scicalc-pro-14792-3f661889/scicalc_pro/src/components/Calculator.js", "pattern": "/^  const [memory, setMemory] = useState(0);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "toEvalExpr", "path": "/home/kavia/workspace/code-generation/scicalc-pro-14792-3f661889/scicalc_pro/src/components/Calculator.js", "pattern": "/^  function toEvalExpr(expr) {$/", "language": "JavaScript", "kind": "function", "signature": "(expr)"}, {"_type": "tag", "name": "txt", "path": "/home/kavia/workspace/code-generation/scicalc-pro-14792-3f661889/scicalc_pro/src/components/Calculator.js", "pattern": "/^      let txt = (+res).toPrecision(10).replace(\\/(\\\\.[0-9]*[1-9])0+$|\\\\.0+$\\/, '$1');$/", "language": "JavaScript", "kind": "variable"}, {"_type": "tag", "name": "txt", "path": "/home/kavia/workspace/code-generation/scicalc-pro-14792-3f661889/scicalc_pro/src/components/Calculator.js", "pattern": "/^      let txt = (+result).toPrecision(10).replace(\\/(\\\\.[0-9]*[1-9])0+$|\\\\.0+$\\/, '$1');$/", "language": "JavaScript", "kind": "variable"}, {"_type": "tag", "name": "val", "path": "/home/kavia/workspace/code-generation/scicalc-pro-14792-3f661889/scicalc_pro/src/components/Calculator.js", "pattern": "/^    const val = parseFloat(display);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "val", "path": "/home/kavia/workspace/code-generation/scicalc-pro-14792-3f661889/scicalc_pro/src/components/Calculator.js", "pattern": "/^    let val = parseFloat(display);$/", "language": "JavaScript", "kind": "variable"}], "filename": "/home/kavia/workspace/code-generation/scicalc-pro-14792-3f661889/scicalc_pro/src/components/Calculator.js", "hash": "0dd5eea978858b2e619edc98fbd66255", "format-version": 4, "code-base-name": "default", "fields": [{"name": "let result = '';", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "let txt = (+res).toPrecision(10).replace(\\/(\\\\.[0-9]*[1-9])0+$|\\\\.0+$\\/, '$1');", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "let txt = (+result).toPrecision(10).replace(\\/(\\\\.[0-9]*[1-9])0+$|\\\\.0+$\\/, '$1');", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "let val = parseFloat(display);", "scope": "", "scopeKind": "", "description": "unavailable"}]}